version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:16-alpine
    container_name: devfeed-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: devfeed
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: dev123!
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - devfeed-network

  # Redis 캐시 (기본 캐싱용)
  redis:
    image: redis:7-alpine
    container_name: devfeed-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devfeed-network

  # DevFeed Backend Application
  devfeed-backend:
    build: .
    container_name: devfeed-backend
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - DATABASE_URL=jdbc:postgresql://postgres:5432/devfeed
      - DATABASE_USERNAME=developer
      - DATABASE_PASSWORD=dev123!
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8080:8080"  # Phase 1에서는 단순하게 8080
    networks:
      - devfeed-network

volumes:
  postgres_data:
  redis_data:

networks:
  devfeed-network:
    driver: bridge